security:
  # Hachage de mot de passe pour l'entité User
  password_hashers:
    App\Entity\User:
      algorithm: auto

  # Fournisseur d'utilisateurs (UserProvider)
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email

  # Firewalls (zones protégées de ton site)
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    main:
      lazy: true
      provider: app_user_provider

      # Authenticator personnalisé
      custom_authenticator: App\Security\LoginFormAuthenticator
      entry_point: App\Security\LoginFormAuthenticator

      # Connexion via formulaire
      form_login:
        login_path: app_login
        check_path: app_login
        username_parameter: email
        password_parameter: password
        default_target_path: /profile
        always_use_default_target_path: false

      # Déconnexion
      logout:
        path: app_logout
        target: /

      # Remember me
      remember_me:
        secret: '%kernel.secret%'
        lifetime: 604800 # 7 jours
        path: /

  # Contrôle d'accès aux routes selon les rôles
  access_control:
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/profile, roles: ROLE_USER }
    - { path: ^/login, roles: PUBLIC_ACCESS }
    - { path: ^/register, roles: PUBLIC_ACCESS }
    - { path: ^/, roles: PUBLIC_ACCESS }

# Configuration spéciale pendant les tests
when@test:
  security:
    password_hashers:
      App\Entity\User:
        algorithm: auto
        cost: 4
        time_cost: 3
        memory_cost: 10
